{"version":3,"file":"static/js/503.b6a2e17b.chunk.js","mappings":"0PAGMA,EAAOC,EAAAA,GAAAA,GAAH,8IASJC,EAAOD,EAAAA,GAAAA,GAAH,wGAQJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2J,gKCFd,EAfkB,SAAC,GAAsB,IAApBI,EAAmB,EAAnBA,aACnB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,OACE,kBAAMC,SAAUJ,EAAhB,WACE,kBAAOK,KAAK,OAAOC,KAAK,QAAQC,SAAU,SAAAC,GAAC,OAL3B,SAAAA,GAClBL,EAAYK,EAAEC,cAAcC,MAC7B,CAGkDC,CAAYH,EAAhB,KAC3C,mBAAQH,KAAK,SAASO,UAAWV,EAAjC,sBAKL,ECuCD,EAjDe,WACb,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBJ,GAFnB,UAGY,KADtBK,EAFU,QAGPC,QAAQC,OAHD,uBAIdC,MAAM,0BAAD,OAA2BR,IAJlB,0BAOhBN,EAAUW,EAAKC,SAPC,kDAShBG,QAAQC,IAAI,KAAMC,SATF,0DAAH,qDAYjBR,GAbC,CAcF,GAAE,CAACH,IAUJ,OACE,gCACGP,IAAU,SAAC,EAAD,CAAWb,aAVL,SAAAQ,GACnBA,EAAEwB,iBAEF,IAAMC,EAAYzB,EAAE0B,OAAOC,SAASf,MAAMV,MAE1CO,EAA8B,KAAdgB,EAAmB,CAAEb,MAAOa,GAAc,CAAC,EAC5D,KAKG,SAAC,KAAD,UACGpB,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAUC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMvB,GAAtC,SACGmB,KAFMC,EADD,QAUnB,C,+IClDKI,EAAU,mCAEVC,EAAWC,EAAAA,EAAAA,OAAa,CAAEC,QAHf,iCAUJrB,EAAe,mCAAG,WAAMd,GAAN,uFACViC,EAAStB,IAAT,gCACQqB,EADR,kBACyBhC,EADzB,+CADU,cACvBe,EADuB,yBAItBA,EAAKA,MAJiB,2CAAH,sDAOfqB,EAAY,mCAAG,WAAOC,EAASC,GAAhB,uFACPL,EAAStB,IAAT,iBACP0B,GADO,OACGC,EADH,oBACmBN,IAFZ,cACpBjB,EADoB,yBAInBA,EAAKA,MAJc,2CAAH,wDAOZwB,EAAS,mCAAG,oGACJN,EAAStB,IAAT,iCAAuCqB,IADnC,cACjBjB,EADiB,yBAEhBA,EAAKA,MAFW,2CAAH,oD","sources":["pages/HomePage/HomePageStyled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","serviceApi/getMoviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 5px;\n  padding: 0px;\n  margin-left: 29px;\n`;\n\nconst Item = styled.li`\n  border: none;\n  border-radius: 4px;\n  :hover {\n    color: orangered;\n  }\n`;\n\nconst LinkItem = styled(Link)`\n  display: block;\n  padding: 5px;\n  text-decoration: none;\n  color: #212121;\n  width: 100%;\n  :hover {\n    color: blue;\n  }\n`;\nexport { List, Item, LinkItem };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ handleSubmit }) => {\n  const [hasQuery, setHasQuery] = useState('');\n  const updateQuery = e => {\n    setHasQuery(e.currentTarget.value);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" onChange={e => updateQuery(e)}></input>\n      <button type=\"submit\" disabled={!hasQuery}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../serviceApi/getMoviesApi';\nimport { List, Item, LinkItem } from './HomePage/HomePageStyled';\nimport SearchBox from '../components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const searchMovie = async () => {\n      try {\n        const data = await getSearchMovies(query);\n        if (data.results.length === 0) {\n          alert(`no response on request ${query}`);\n          return;\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    searchMovie();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const queryName = e.target.elements.query.value;\n\n    setSearchParams(queryName !== '' ? { query: queryName } : {});\n  };\n\n  return (\n    <>\n      {movies && <SearchBox handleSubmit={handleSubmit} />}\n      <List>\n        {movies.map(({ title, id }) => (\n          <Item key={id}>\n            <LinkItem to={`${id}`} state={{ from: location }}>\n              {title}\n            </LinkItem>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f13d291a2e62abd75d768079816666c5';\n\nconst instance = axios.create({ baseURL: BASE_URL });\n\nexport const getTradingMovies = async () => {\n  const data = await instance.get(`/trending/all/day?api_key=${API_KEY}`);\n  return data.data;\n};\n\nexport const getSearchMovies = async value => {\n  const data = await instance.get(\n    `/search/movie?api_key=${API_KEY}&query=${value}&language=en-US&page=1&include_adult=false`\n  );\n  return data.data;\n};\n\nexport const getMovieById = async (movieId, info) => {\n  const data = await instance.get(\n    `/movie/${movieId}${info}?api_key=${API_KEY}`\n  );\n  return data.data;\n};\n\nexport const getImages = async () => {\n  const data = await instance.get(`/configuration?api_key=${API_KEY}`);\n  return data.data;\n};\n"],"names":["List","styled","Item","LinkItem","Link","handleSubmit","useState","hasQuery","setHasQuery","onSubmit","type","name","onChange","e","currentTarget","value","updateQuery","disabled","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","searchMovie","getSearchMovies","data","results","length","alert","console","log","message","preventDefault","queryName","target","elements","map","title","id","to","state","from","API_KEY","instance","axios","baseURL","getMovieById","movieId","info","getImages"],"sourceRoot":""}