{"version":3,"file":"static/js/186.7066681c.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBP,EAAS,YAF7B,OAETQ,EAFS,OAIfJ,EAAWI,EAAKC,SAJD,gDAMfC,QAAQC,IAAI,KAAMC,SANH,yDAAH,qDAUhBN,GACD,GAAE,CAACN,IAECG,EAGL,OAAuB,IAAnBA,EAAQU,QACH,sEAGP,8BACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,4BACE,wBAAKF,IADP,KACoB,uBAAIC,MADdC,EADC,KAOlB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../../serviceApi/MovieApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const data = await getMovieDetails(movieId, '/reviews');\n\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  if (reviews.length === 0) {\n    return <h2>We don't have any reviews for this move`</h2>;\n  }\n  return (\n    <>\n      {reviews.map(({ author, content, id }) => (\n        <div key={id}>\n          <h3>{author}</h3> <p>{content}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieDetails","data","results","console","log","message","length","map","author","content","id"],"sourceRoot":""}